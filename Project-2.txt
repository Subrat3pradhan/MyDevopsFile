In Linux
**********

Step-1 (Lunch EC2 for Git)
===================================================================================
1-Lunch EC2 instance and install Git, and Clone the "SaiJavaCode" repository and 
  modify the  index.jsp file.
                    (or)
2-open git-Bash and clone the "SaiJavaCode" repositort and edit index.jsp file
                    (or)
3-open any folder where you want to create repository folder, go that path search bar   type "cmd"--> now open cmd prompt terminal with that folder directory--> now clone   that repository

step-2 (Lunch Jenkins server and install git, java and set EV path for java)
=================================================================================
1-Lunch EC2 instance for Jenkis server, with modify SG ssh, http, 8080
  --> install git
  --> install Java-17*
2-set environmental veriable
  --> vi .bash_profile
        JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64
                  
        PATH=$PATH:$HOME/bin:$JAVA_HOME:
3-exit from root user and again enter sudo su -

step-3 (jenkins install on jenkins server EC2)
===========================================================================
1-Go to Jenkis.io website, and follow the below instruction for jenkis install
->wget -O /etc/yum.repos.d/jenkins.repo \
https://pkg.jenkins.io/redhat/jenkins.repo
->rpm --import https://pkg.jenkins.io/redhat/jenkins.io-2023.key
->yum upgrade
# Add required dependencies for the jenkins package
->yum install jenkins
->service jenkins start
 Now login in browser EC2public IP:8080

step-4 (loing setup for jenkins and set java,maven EV path & install plugin)
================================================================================
After jenkins login
1-set java path on jenkins tool
2-Install below jenkins plugin
      -->GitHub
      -->Maven Integration
      -->Maven Invoker
      -->Publish over ssh

step-5 (maven installation on jenkin server & Environment veriable path set)
=================================================================================
1-go to apache-maven website
   -->cd /opt
   -->wget pest the tar.gz link for website
   -->tar -xvzf tar.gz file
   --> rename that file as maven
2-set environmental veriable
  --> vi .bash_profile
        JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64
        M2_HOME=/opt/maven
        M2=/opt/maven/bin
        PATH=$PATH:$HOME/bin:$JAVA_HOME:$M2:$M2_HOME
3-exit from root user and again enter sudo su -
  --> now check, mvn -version, echo $M2_home
4-login jenkins and set maven path

step-6 (Create a job and build that job to create .war file)
================================================================================
1-now create a job
   -->Job name: MyFirst-Mavenproject
   -->project type: maven project ---->ok
   -->select git and past the repo.link
   --> in goal type "clean install" --->Apply--->save
2-Build that Job, after success check below path .war file created
   cd /var/lib/jenkins/workspace/MyFirst-MavenPrject/webapp/target

step-7 (Lunch ansible server, instal Ansible, add user, pw, and sudo privilage to user)
======================================================================================
Lunch EC2 instance for ansible server, and instal ansible 2nd process without config file
1- yum install python -y
2- yum install python-pip
3- pip install ansible
4- pip install --upgrade pip
   -->ansible --version // showing configuration file none
5---useradd ansadmin
    passwd ansadmin // set password
6- visudo //sudo privilage to user
     ansadmin ALL=(ALL) NOPASSWD: ALL
7- vi /etc/ssh/sshd_config //ssh permision
     PasswordAuthentication yes
   ->service sshd restart
8- su - ansadmin
   -->ssh-keygen ->enter -> enter-> enter->
   -->ls .ssh // check public key file

step-8 (Lunch Ansible node and crete user, pw, and provide sudo privilage)
===========================================================================
Lunch 2 EC2 instace for ansible node purpose, configure below on bothe node use muli-exe
1-useradd ansadmin
  passwd ansadmin // set password
2-visudo //sudo privilage to user
     ansadmin ALL=(ALL) NOPASSWD: ALL
3-vi /etc/ssh/sshd_config //ssh permision
     PasswordAuthentication yes
   ->service sshd restart

step-9 (copy public key from server to both node & create hosts file manually)
==============================================================================
login ansible server with su - ansadmin
1- ssh-copy-id ansadmin@172.31.15.247(private ip of node EC2)
    --> put password of user for last time)
2- same for 2nd node
3- now check ssh with private ip
4-for creating hosts file, bcz ansible install 2nd process withous cofigfile
   -->sudo mkdir /etc/ansible
   -->cd /etc/ansible/
   -->sudo vi hosts            //hosts file should be inside /etc/ansible/

            172.31.15.247 //private ip of node-1
            172.31.15.248 //private ip of node-2
            :wq!
5-got to /etc/ansible/ this directory check below cmd
  -->ansible all -m ping // check ip reachable or not

step-10 (connect jenkins server to ansible server)
=================================================================================
1-goto jenkins dashboard-->manage jenkins-->systems
   -->scrole down to Publish over SSH
      -->ssh Server add
          ->Name:ansible server //any name
          ->Hostname:172.31.9.137 //private ip of ansible server
          ->Username:ansadmin //create user in ansible server
          ->go to advance
              --> (enable)Use password authentication, or use a different key
                  -->enter PW of ansadmin user
                  -->Test configuration----->after success
  -->Apply--> Save

step-11 (create new 2nd job for .war file push to ansible server)
==================================================================
1-now create a 2nd job
   -->Job name: Deploy_on_ansible
   -->copy from: MyFirst-Mavenproject--> ok
   --> git and goal copy from previous so we dont set
   -->Post-build Actions
      --> select Send build artifacts over SSH
           ->check server name
           ->source file: webapp/target/*.war
           ->Remove prefix: webapp/target  
           ->Remote directory: //home//ansadmin  #(any dir upto u, // beter sometime / not                                                    recognize and create new dir)#
           ->Apply--> Save
2-Build the job, after success check
   ->In Jenkins server
      /var/lib/jenkins/workspace/Deploy_on_ansible/webapp/target/webapp.war (new war       file    created, if check time type cmd date, ls -l)
   ->In ansible server
      ->date
      ->ls -a check .war file trasfer or not

step-12 (instal java and tomcat on ansible nodes)
=====================================================================================
select 2 node on multi-exection
1-yum install java-17* -y
2-set environmental veriable
  --> vi .bash_profile
        JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64
                  
        PATH=$PATH:$HOME/bin:$JAVA_HOME:
  --> exit from root user and again enter sudo su -
3-go to apache-tomcat website
   -->wget past the tar.gz link for website (version-11)
   -->tar -xvzf tar.gz file
   --> rename that file as tomcat
 if now check its not working http://public-ip:8080, due to not start the service
4- cd tomcat/bin
   -->ls, check startup.sh & shutdown.sh
   -->./startup.sh
  (Now http://public-ip:8080 check its working, but not acces to manager App(Bcz manager    aap work same machine browser where tomcat install,tomcat install in EC2 and now       browsing from my laptop)
5- cd conf/
  -->find / -name context.xml
      /root/tomcat/conf/context.xml
      /root/tomcat/webapps/docs/META-INF/context.xml
      /root/tomcat/webapps/examples/META-INF/context.xml
      /root/tomcat/webapps/host-manager/META-INF/context.xml
      /root/tomcat/webapps/manager/META-INF/context.xml
  --> last two manager context.xml file update required
  --> vi /root/tomcat/webapps/host-manager/META-INF/context.xml
         <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
    The above line blocking from accessing other browser, now its convert to commented
      <!-- <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" /> -->
  -->vi /root/tomcat/webapps/manager/META-INF/context.xml
     same commented for above line
6- Now still its not working, so stop and start service
  -->go to cd tomcat/bin
  -->./shutdown.sh
  -->./startup.sh
  Now check its working, but not set user name and PW
7- go to -> cd conf/
  -->vi tomcat-users.xml (past the script above last bootom of line)
      <role rolename="manager-gui"/>
      <role rolename="manager-script"/>
      <role rolename="manager-jmx"/>
      <role rolename="manager-status"/>
      <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
      <user username="deployer" password="deployer" roles="manager-script"/>
      <user username="tomcat" password="s3cret" roles="manager-gui"/>

  Note- check 1st space any charachter just delete space and again create space
  -->go to cd tomcat/bin
  -->./shutdown.sh
  -->./startup.sh
Now login with admin, its working

step-13 (create playbook for copy from ansible server to nodes tomcat)
======================================================================================
1-vi sample-devops-project.yml
---
- hosts: all
  become: yes

  tasks:
  - name: Deploying war file into Tomcat VM of ansible nodes
    copy:
      src: ./webapp.war
      dest: /root/tomcat/webapps
2- still its not move bcz, this file should present where hosts file, better to move    inventory file this location where playbook and .war file present 
3- sudo mv /etc/ansible/hosts ./
4-ansible-playbook -i hosts sample-devops-project.yml
                 -------
                 i= due tu manual create so its use
                 if hosts file in other location give path
5-now check .war file move to tomcat
  ->cd tomcat/webapps check .war file present
  -> also gui login tomcat, clik webapp.war and read the content

step-14 (create new 3rd job for complete automation process)
=======================================================================
1-now create a 3rd job
   -->Job name: Deploy_on_ansible( 2nd job)
   -->copy from: MyFirst-Mavenproject--> ok
   --> git and goal copy from previous so we dont set
   -->Post-build Actions
      --> select Send build artifacts over SSH
       same as 2nd job  ->check server name                
       same as 2nd job  ->source file: webapp/target/*.war
       same as 2nd job  ->Remove prefix: webapp/target  
       same as 2nd job  ->Remote directory: //home//ansadmin  
              #(any dir upto u, // beter sometime / not recognize and create new dir)#
       New for 3rd job  
           ->Exec command: ansible-playbook -i /home/ansadmin/hosts /home/ansadmin/sample-devops-project.yml
              (its Playbook run command using job for automation, mention hosts, playbook file path)
      -->Apply--> Save
2-Before build for fresh war file delete old war file, Now Build the Job
3-Now check the war file available on tomcat server, open and check content. also check in Ec2, ls, ls -l, date

Step-15 (still now we run job manually, now run job automatiaclly, using Pool SCM)
====================================================================================
1- configure 3rd job
  -->Trigger : Enable Poll SCM  & Sechdule with * * * * *
  -->Apply--> Save

step-16 (Check after modify and commit, pool SCM run automatically or not)
=======================================================================================
1- edit index.jsp file, add and commit and push
2-Now check at tomcat content changed or not

       






    

         





    
   






















